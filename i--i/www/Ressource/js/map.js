// Generated by CoffeeScript 1.8.0
(function() {
  angularApp.controller("mapController", [
    function() {
      var eventIcon, eventLayer, events, filterEvents, getIcon, goToDetail, map, showMap, tiles, userIcon;
      events = [];
      tiles = L.tileLayer('https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {
        maxZoom: 18,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' + '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' + 'Imagery © <a href="http://mapbox.com">Mapbox</a>',
        id: 'examples.map-i875mjb7'
      });
      map = L.map('map', {
        center: [46.818188, 8.227512],
        zoom: 8,
        layers: [tiles]
      });
      eventLayer = L.markerClusterGroup({
        spiderfyDistanceMultiplier: 2
      }).addTo(map);
      userIcon = L.icon({
        iconUrl: fw.getRessource("userIMG"),
        iconSize: [30, 30],
        iconAnchor: [15, 15],
        popupAnchor: [0, 0]
      });
      eventIcon = L.Icon.extend({
        options: {
          iconSize: [46, 46],
          iconAnchor: [23, 23],
          popupAnchor: [0, 0]
        }
      });
      getIcon = function(iconName) {
        return new eventIcon({
          iconUrl: fw.getRessource(iconName + "IMG")
        });
      };
      showMap = function(userPos) {
        var userMarker;
        map.setView(userPos, 10);
        return userMarker = L.marker(userPos, {
          icon: userIcon
        }).addTo(map).bindPopup("Vous êtes par là... à peu près").openPopup();
      };
      navigator.geolocation.getCurrentPosition(function(pos) {
        return showMap(new L.LatLng(pos.coords.latitude, pos.coords.longitude));
      });
      goToDetail = function(event) {
        return fw.goToPage("/eventDetail", event);
      };
      filterEvents = function(events) {
        return fw.requestServer({
          app: "map",
          controller: "filterEvents",
          callback: function(results) {
            var event, index, _i, _len, _results;
            events = results;
            _results = [];
            for (index = _i = 0, _len = events.length; _i < _len; index = ++_i) {
              event = events[index];
              _results.push((function(event, index) {
                var i, lat, lng, pictureName, popupContent, popupLink, range, textDate, _fn, _j, _len1, _ref;
                lng = event.location.coordinates[0];
                lat = event.location.coordinates[1];
                pictureName = event.category + "_" + event.type;
                textDate = "";
                _ref = event.timetables;
                _fn = function(range) {
                  var date, j, _k, _len2, _ref1, _results1;
                  if (i > 0) {
                    textDate += ", ";
                  }
                  _ref1 = range.dates;
                  _results1 = [];
                  for (j = _k = 0, _len2 = _ref1.length; _k < _len2; j = ++_k) {
                    date = _ref1[j];
                    if (j > 0) {
                      textDate += ", ";
                    }
                    _results1.push(textDate += date);
                  }
                  return _results1;
                };
                for (i = _j = 0, _len1 = _ref.length; _j < _len1; i = ++_j) {
                  range = _ref[i];
                  _fn(range);
                }
                popupLink = document.createElement("a");
                popupLink.href = "#";
                popupLink.innerHTML = event.title;
                popupLink.onclick = function() {
                  return goToDetail(event);
                };
                popupContent = document.createElement("span");
                popupContent.innerHTML = textDate + "<br />";
                popupContent.appendChild(popupLink);
                return L.marker([lat, lng], {
                  icon: getIcon(pictureName)
                }).bindPopup(popupContent).addTo(eventLayer);
              })(event, index));
            }
            return _results;
          }
        });
      };
      fw.pubsub.subscribe("filterEvents", filterEvents, true);
      return fw.pubsub.publish("filterEvents", {});
    }
  ]);

  fw.pubsub.publish("documentReady", "mapAPP");

}).call(this);
